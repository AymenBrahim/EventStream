/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as SigninImport } from './routes/signin'
import { Route as CreateeventImport } from './routes/create_event'
import { Route as EventEventidImport } from './routes/event.$event_id'

// Create Virtual Routes

const ProfileLazyImport = createFileRoute('/profile')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const ProfileLazyRoute = ProfileLazyImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/profile.lazy').then((d) => d.Route))

const SignupRoute = SignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const SigninRoute = SigninImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => rootRoute,
} as any)

const CreateeventRoute = CreateeventImport.update({
  id: '/create_event',
  path: '/create_event',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const EventEventidRoute = EventEventidImport.update({
  id: '/event/$event_id',
  path: '/event/$event_id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/create_event': {
      id: '/create_event'
      path: '/create_event'
      fullPath: '/create_event'
      preLoaderRoute: typeof CreateeventImport
      parentRoute: typeof rootRoute
    }
    '/signin': {
      id: '/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SigninImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileLazyImport
      parentRoute: typeof rootRoute
    }
    '/event/$event_id': {
      id: '/event/$event_id'
      path: '/event/$event_id'
      fullPath: '/event/$event_id'
      preLoaderRoute: typeof EventEventidImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/create_event': typeof CreateeventRoute
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/profile': typeof ProfileLazyRoute
  '/event/$event_id': typeof EventEventidRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/create_event': typeof CreateeventRoute
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/profile': typeof ProfileLazyRoute
  '/event/$event_id': typeof EventEventidRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/create_event': typeof CreateeventRoute
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/profile': typeof ProfileLazyRoute
  '/event/$event_id': typeof EventEventidRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/create_event'
    | '/signin'
    | '/signup'
    | '/profile'
    | '/event/$event_id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/create_event'
    | '/signin'
    | '/signup'
    | '/profile'
    | '/event/$event_id'
  id:
    | '__root__'
    | '/'
    | '/create_event'
    | '/signin'
    | '/signup'
    | '/profile'
    | '/event/$event_id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  CreateeventRoute: typeof CreateeventRoute
  SigninRoute: typeof SigninRoute
  SignupRoute: typeof SignupRoute
  ProfileLazyRoute: typeof ProfileLazyRoute
  EventEventidRoute: typeof EventEventidRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  CreateeventRoute: CreateeventRoute,
  SigninRoute: SigninRoute,
  SignupRoute: SignupRoute,
  ProfileLazyRoute: ProfileLazyRoute,
  EventEventidRoute: EventEventidRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/create_event",
        "/signin",
        "/signup",
        "/profile",
        "/event/$event_id"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/create_event": {
      "filePath": "create_event.tsx"
    },
    "/signin": {
      "filePath": "signin.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/profile": {
      "filePath": "profile.lazy.tsx"
    },
    "/event/$event_id": {
      "filePath": "event.$event_id.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
